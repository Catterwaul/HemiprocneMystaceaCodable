import Foundation
import HMCodable
import Testing

struct CodableTests {
  @Test func encodeAndDecode() throws {
    let coatable = Coatable(ğŸ¥¼: 0, ğŸ§¥: "ğŸ§¥")
    #expect(
      try JSONDecoder().decode(from: JSONEncoder().encode(coatable))
      ==
      coatable
    )
  }
}

private struct Coatable: Equatable {
  let ğŸ¥¼: Int
  let ğŸ§¥: String
}

extension Coatable: Codable {
  private enum CodingKey: Swift.CodingKey { case ğŸ¥¼, ğŸ§¥ }

  init(from decoder: any Decoder) throws {
    self = try decoder[(CodingKey.ğŸ¥¼, .ğŸ§¥), Self.init]
  }

  func encode(to encoder: any Encoder) throws {
    try encoder.encode(
      (CodingKey.ğŸ¥¼, ğŸ¥¼),
      (key: .ğŸ§¥, value: ğŸ§¥)
    )
  }
}
